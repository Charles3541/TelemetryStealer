<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAPsSURBVHhe7do9bhRREARgS44ckTr3DZwTE9gH8AXICTgDJyDnBtyBI3AAcmJCEuiyelBrVGN2
        dufV9EA96ZNW5fnp18/7NztXb9492o5oaDo0NB0amg4NTYeGpkND06Gh6dDQdGhoOjQ0HRqaDg1Nh4am
        Q0PToaHp0NB0aGg6NDQdGpoODU2HhqZDQ9OhoenQ0HRoaDo0NB0amg4NTYeGRxDjOrxO12ybI6BhdzFu
        wofwI+HxDdu2Oxp2FuNVNvxn+JXw+JCLQMOuYqD5H0Ntfl0E/O0V27crGnaExmaD502fL8ahFoGG3aCh
        4VOojcZr//uEx/Vv2PYQi0DDTmLcZkNrg6fm45MQLC3CLTtmJzTsAg0Mn0NtLBr9Nvz56InHmc0XAfu2
        XgQadoDGZQNrQ5+bz7YH/C23qfu0XgQa7i3GXTauNvJ7WGz+JMZTblv3xbHu2PZ7o+Ge0KjwJdQGoqFP
        bHsG2+Y+9Rg4ZrtFoOFe0KBsVG3cquZPYjzkvvVY7RaBhmox8Ca61PwHts8psG/4FuoxWy0CDdVi3Gdj
        aqPQuLObP8Ex8lj12F/DPdtejYZKaEQ2pDZok+ZPYuCKaV0EfHtusQg0VEEDshHz5r9m218Cxwzzc+2+
        CDRUiLHUkM2bDzHwPsMWfNg5T0HD0TDhsMvrMs6R56rnHvKsOwUNR4qx+5sizhWGvOmvRcNRMMGcaJ04
        GiF/HY7BPvbKF4GGW4uB199WX4xiDPnusRYNtxaj7aUB1JC11NpQ6+pv3+eg4ZYwkZxQnWCL5k9QS2AX
        /4YvAg23EuMwl4dRU9ZWa33x8vcWaHipGIf8gQS1ZY215udFCEPuPaLhJVBoYD8Rtm7+BDWGxZ9A2T6X
        oOG5UGAWOm/+IX6fncR46SaATReBhudAYVng/DYRTORQ9+oAag7sNphNF4GGa6GgML9bDQ53o1SF2nMO
        dV54vNldeDRcA4VkQfMiUfgh79esMIcw7FZIGp4KBWQhQ4rrIAae3cPmScNTxBj+9OwEc8q5zed70css
        Df8GJ8wTT4UAPiX8k82fxFj6oHH2ItDwJThRmH9EQ0Gbf0TrCHPMubKP2qsXgYZLYuDk7D//v2j+BHPN
        Oc8XAb1Z1QcaLomBb4n1ej4KGPY1vTPMOedeFwG9WXWRkYZLYuCNCE81vOTgauHQC1VHgB5kL7AAuNyy
        6j2Qhi+JgfcA/Liy+y0dXaAX2ZPVl1toaDo0NB0amg4NTYeGpkND06Gh6dDQdGhoOjQ0HRqaDg1Nh4am
        Q0PToaHp0NB0aGg6NDQdGpoODU2HhqZDQ9OhoenQ0HRoaDo0NB0amg4NTYeGpvJ49Rt45LmLtIJcqwAA
        AABJRU5ErkJggg==
</value>
  </data>
  <metadata name="Timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="Timer2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>107, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>35</value>
  </metadata>
</root>